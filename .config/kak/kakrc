# LSP
eval %sh{kak-lsp}
lsp-enable
# TODO: LSP bindings

# Load EditorConfig
hook global BufOpenFile .* %{ editorconfig-load }
hook global BufNewFile .* %{ editorconfig-load }

# Options
set-option global grepcmd 'rg --hidden'

# Highlighters
add-highlighter global/ number-lines -relative -separator ' ' -hlcursor
add-highlighter global/ wrap -word
add-highlighter global/ show-matching -previous
add-highlighter global/ show-whitespaces -lf ' ' -only-trailing

# Switch cursor color in insert mode
set-face global InsertCursor default,green+B

hook global ModeChange .*:.*:insert %{
    set-face window PrimaryCursor InsertCursor
    set-face window PrimaryCursorEol InsertCursor
}

hook global ModeChange .*:insert:.* %{ try %{
    unset-face window PrimaryCursor
    unset-face window PrimaryCursorEol
}}

# Mappings
map global normal '#' :comment-line<ret> -docstring 'comment line'
map global normal D xd -docstring 'delete line'

# Tab completion
hook global InsertCompletionShow .* %{ map window insert <tab> <c-n>; map window insert <s-tab> <c-p> }
hook global InsertCompletionHide .* %{ unmap window insert <tab> <c-n>; unmap window insert <s-tab> <c-p> }

# Copy/paste using system clipboard
def system-clipboard-y -docstring 'Copy to system clipboard' %{
  eval %sh{
    if [ -n "$WAYLAND_DISPLAY" ]; then
      printf "%s\n" "execute-keys '<a-|>wl-copy<ret>'"
    elif [ -n "$DISPLAY" ]; then
      printf "%s\n" "execute-keys '<a-|>xclip -sel clip<ret>'"
    else
      printf "%s\n" "fail 'Could not identify a desktop session'"
    fi
  }
}

def system-clipboard-P -docstring 'Prepend from system clipboard' %{
  eval %sh{
    if [ -n "$WAYLAND_DISPLAY" ]; then
      printf "%s\n" "execute-keys '!wl-paste --no-newline<ret>'"
    elif [ -n "$DISPLAY" ]; then
      printf "%s\n" "execute-keys '!xclip -out -sel clip<ret>'"
    else
      printf "%s\n" "fail 'Could not identify a desktop session'"
    fi
  }
}

def system-clipboard-p -docstring 'Append from system clipboard' %{
  eval %sh{
    if [ -n "$WAYLAND_DISPLAY" ]; then
      printf "%s\n" "execute-keys '<a-!>wl-paste --no-newline<ret>'"
    elif [ -n "$DISPLAY" ]; then
      printf "%s\n" "execute-keys '<a-!>xclip -out -sel clip<ret>'"
    else
      printf "%s\n" "fail 'Could not identify a desktop session'"
    fi
  }
}

map global user y ':system-clipboard-y<ret>' -docstring 'Copy to system clipboard'
map global user p ':system-clipboard-p<ret>' -docstring 'Append from system clipboard'
map global user P ':system-clipboard-P<ret>' -docstring 'Prepend from system clipboard'
